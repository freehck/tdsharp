using System;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Describes an available stream in a group call
        /// </summary>
        public partial class GroupCallStream : Object
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "groupCallStream";

            /// <summary>
            /// Extra data attached to the object
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of an audio/video channel
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("channel_id")]
            public int ChannelId { get; set; }

            /// <summary>
            /// Scale of segment durations in the stream. The duration is 1000/(2**scale) milliseconds
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("scale")]
            public int Scale { get; set; }

            /// <summary>
            /// Point in time when the stream currently ends; Unix timestamp in milliseconds
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("time_offset")]
            public long TimeOffset { get; set; }
        }
    }
}
// REUSE-IgnoreEnd