using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Loads more active stories from a story list. The loaded stories will be sent through updates. Active stories are sorted by
        /// the pair (active_stories.order, active_stories.story_sender_chat_id) in descending order. Returns a 404 error if all active stories have been loaded
        /// </summary>
        public class LoadActiveStories : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "loadActiveStories";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// The story list in which to load active stories
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("story_list")]
            public StoryList StoryList { get; set; }
        }

        /// <summary>
        /// Loads more active stories from a story list. The loaded stories will be sent through updates. Active stories are sorted by
        /// the pair (active_stories.order, active_stories.story_sender_chat_id) in descending order. Returns a 404 error if all active stories have been loaded
        /// </summary>
        public static Task<Ok> LoadActiveStoriesAsync(
            this Client client, StoryList storyList = default)
        {
            return client.ExecuteAsync(new LoadActiveStories
            {
                StoryList = storyList
            });
        }
    }
}
// REUSE-IgnoreEnd