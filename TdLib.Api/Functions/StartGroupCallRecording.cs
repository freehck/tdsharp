using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Starts recording of an active group call. Requires groupCall.can_be_managed group call flag
        /// </summary>
        public class StartGroupCallRecording : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "startGroupCallRecording";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Group call identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("group_call_id")]
            public int GroupCallId { get; set; }

            /// <summary>
            /// Group call recording title; 0-64 characters
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("title")]
            public string Title { get; set; }

            /// <summary>
            /// Pass true to record a video file instead of an audio file
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("record_video")]
            public bool RecordVideo { get; set; }

            /// <summary>
            /// Pass true to use portrait orientation for video instead of landscape one
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("use_portrait_orientation")]
            public bool UsePortraitOrientation { get; set; }
        }

        /// <summary>
        /// Starts recording of an active group call. Requires groupCall.can_be_managed group call flag
        /// </summary>
        public static Task<Ok> StartGroupCallRecordingAsync(
            this Client client, int groupCallId = default, string title = default, bool recordVideo = default, bool usePortraitOrientation = default)
        {
            return client.ExecuteAsync(new StartGroupCallRecording
            {
                GroupCallId = groupCallId, Title = title, RecordVideo = recordVideo, UsePortraitOrientation = usePortraitOrientation
            });
        }
    }
}
// REUSE-IgnoreEnd