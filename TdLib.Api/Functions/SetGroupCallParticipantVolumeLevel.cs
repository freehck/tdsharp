using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Changes volume level of a participant of an active group call. If the current user can manage the group call, then the participant's volume level will be changed for all users with the default volume level
        /// </summary>
        public class SetGroupCallParticipantVolumeLevel : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "setGroupCallParticipantVolumeLevel";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Group call identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("group_call_id")]
            public int GroupCallId { get; set; }

            /// <summary>
            /// Participant identifier
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("participant_id")]
            public MessageSender ParticipantId { get; set; }

            /// <summary>
            /// New participant's volume level; 1-20000 in hundreds of percents
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("volume_level")]
            public int VolumeLevel { get; set; }
        }

        /// <summary>
        /// Changes volume level of a participant of an active group call. If the current user can manage the group call, then the participant's volume level will be changed for all users with the default volume level
        /// </summary>
        public static Task<Ok> SetGroupCallParticipantVolumeLevelAsync(
            this Client client, int groupCallId = default, MessageSender participantId = default, int volumeLevel = default)
        {
            return client.ExecuteAsync(new SetGroupCallParticipantVolumeLevel
            {
                GroupCallId = groupCallId, ParticipantId = participantId, VolumeLevel = volumeLevel
            });
        }
    }
}
// REUSE-IgnoreEnd