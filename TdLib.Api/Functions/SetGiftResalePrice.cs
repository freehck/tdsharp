using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Changes resale price of a unique gift owned by the current user
        /// </summary>
        public class SetGiftResalePrice : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "setGiftResalePrice";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the unique gift
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("received_gift_id")]
            public string ReceivedGiftId { get; set; }

            /// <summary>
            /// The new price for the unique gift; 0 or getOption("gift_resale_star_count_min")-getOption("gift_resale_star_count_max"). Pass 0 to disallow gift resale.
            /// The current user will receive getOption("gift_resale_earnings_per_mille") Telegram Stars for each 1000 Telegram Stars paid for the gift
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("resale_star_count")]
            public long ResaleStarCount { get; set; }
        }

        /// <summary>
        /// Changes resale price of a unique gift owned by the current user
        /// </summary>
        public static Task<Ok> SetGiftResalePriceAsync(
            this Client client, string receivedGiftId = default, long resaleStarCount = default)
        {
            return client.ExecuteAsync(new SetGiftResalePrice
            {
                ReceivedGiftId = receivedGiftId, ResaleStarCount = resaleStarCount
            });
        }
    }
}
// REUSE-IgnoreEnd