using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Toggles whether messages are automatically translated in the channel chat; requires can_change_info administrator right in the channel.
        /// The chat must have at least chatBoostFeatures.min_automatic_translation_boost_level boost level to enable automatic translation
        /// </summary>
        public class ToggleSupergroupHasAutomaticTranslation : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "toggleSupergroupHasAutomaticTranslation";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// The identifier of the channel
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("supergroup_id")]
            public long SupergroupId { get; set; }

            /// <summary>
            /// The new value of has_automatic_translation
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("has_automatic_translation")]
            public bool HasAutomaticTranslation { get; set; }
        }

        /// <summary>
        /// Toggles whether messages are automatically translated in the channel chat; requires can_change_info administrator right in the channel.
        /// The chat must have at least chatBoostFeatures.min_automatic_translation_boost_level boost level to enable automatic translation
        /// </summary>
        public static Task<Ok> ToggleSupergroupHasAutomaticTranslationAsync(
            this Client client, long supergroupId = default, bool hasAutomaticTranslation = default)
        {
            return client.ExecuteAsync(new ToggleSupergroupHasAutomaticTranslation
            {
                SupergroupId = supergroupId, HasAutomaticTranslation = hasAutomaticTranslation
            });
        }
    }
}
// REUSE-IgnoreEnd