using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Changes the bio of a business account; for bots only
        /// </summary>
        public class SetBusinessAccountBio : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "setBusinessAccountBio";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Unique identifier of business connection
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("business_connection_id")]
            public string BusinessConnectionId { get; set; }

            /// <summary>
            /// The new value of the bio; 0-getOption("bio_length_max") characters without line feeds
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("bio")]
            public string Bio { get; set; }
        }

        /// <summary>
        /// Changes the bio of a business account; for bots only
        /// </summary>
        public static Task<Ok> SetBusinessAccountBioAsync(
            this Client client, string businessConnectionId = default, string bio = default)
        {
            return client.ExecuteAsync(new SetBusinessAccountBio
            {
                BusinessConnectionId = businessConnectionId, Bio = bio
            });
        }
    }
}
// REUSE-IgnoreEnd