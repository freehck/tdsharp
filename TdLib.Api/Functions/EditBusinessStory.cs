using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Changes a story posted by the bot on behalf of a business account; for bots only
        /// </summary>
        public class EditBusinessStory : Function<Story>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "editBusinessStory";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Identifier of the chat that posted the story
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("story_poster_chat_id")]
            public long StoryPosterChatId { get; set; }

            /// <summary>
            /// Identifier of the story to edit
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("story_id")]
            public int StoryId { get; set; }

            /// <summary>
            /// New content of the story
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("content")]
            public InputStoryContent Content { get; set; }

            /// <summary>
            /// New clickable rectangle areas to be shown on the story media
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("areas")]
            public InputStoryAreas Areas { get; set; }

            /// <summary>
            /// New story caption
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("caption")]
            public FormattedText Caption { get; set; }

            /// <summary>
            /// The new privacy settings for the story
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("privacy_settings")]
            public StoryPrivacySettings PrivacySettings { get; set; }
        }

        /// <summary>
        /// Changes a story posted by the bot on behalf of a business account; for bots only
        /// </summary>
        public static Task<Story> EditBusinessStoryAsync(
            this Client client, long storyPosterChatId = default, int storyId = default, InputStoryContent content = default, InputStoryAreas areas = default, FormattedText caption = default, StoryPrivacySettings privacySettings = default)
        {
            return client.ExecuteAsync(new EditBusinessStory
            {
                StoryPosterChatId = storyPosterChatId, StoryId = storyId, Content = content, Areas = areas, Caption = caption, PrivacySettings = privacySettings
            });
        }
    }
}
// REUSE-IgnoreEnd