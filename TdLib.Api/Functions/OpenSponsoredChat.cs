using System;
using System.Threading.Tasks;
using Newtonsoft.Json;

// REUSE-IgnoreStart
namespace TdLib
{
    /// <summary>
    /// Autogenerated TDLib APIs
    /// </summary>
    public static partial class TdApi
    {
        /// <summary>
        /// Informs TDLib that the user opened a sponsored chat
        /// </summary>
        public class OpenSponsoredChat : Function<Ok>
        {
            /// <summary>
            /// Data type for serialization
            /// </summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "openSponsoredChat";

            /// <summary>
            /// Extra data attached to the function
            /// </summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>
            /// Unique identifier of the sponsored chat
            /// </summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("sponsored_chat_unique_id")]
            public long SponsoredChatUniqueId { get; set; }
        }

        /// <summary>
        /// Informs TDLib that the user opened a sponsored chat
        /// </summary>
        public static Task<Ok> OpenSponsoredChatAsync(
            this Client client, long sponsoredChatUniqueId = default)
        {
            return client.ExecuteAsync(new OpenSponsoredChat
            {
                SponsoredChatUniqueId = sponsoredChatUniqueId
            });
        }
    }
}
// REUSE-IgnoreEnd